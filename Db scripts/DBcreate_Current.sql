CREATE DATABASE [Blog]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'Blog', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\Blog.mdf' , SIZE = 8192KB , FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'Blog_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\Blog_log.ldf' , SIZE = 8192KB , FILEGROWTH = 65536KB )
GO
ALTER DATABASE [Blog] SET COMPATIBILITY_LEVEL = 140
GO
ALTER DATABASE [Blog] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [Blog] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [Blog] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [Blog] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [Blog] SET ARITHABORT OFF 
GO
ALTER DATABASE [Blog] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [Blog] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [Blog] SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF)
GO
ALTER DATABASE [Blog] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [Blog] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [Blog] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [Blog] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [Blog] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [Blog] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [Blog] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [Blog] SET  DISABLE_BROKER 
GO
ALTER DATABASE [Blog] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [Blog] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [Blog] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [Blog] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [Blog] SET  READ_WRITE 
GO
ALTER DATABASE [Blog] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [Blog] SET  MULTI_USER 
GO
ALTER DATABASE [Blog] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [Blog] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO
ALTER DATABASE [Blog] SET DELAYED_DURABILITY = DISABLED 
GO
USE [Blog]
GO
ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = Off;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = Primary;
GO
ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
GO
ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = On;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = Primary;
GO
ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = Off;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = Primary;
GO
USE [Blog]
GO
IF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [Blog] MODIFY FILEGROUP [PRIMARY] DEFAULT
GO


Use Blog
GO
CREATE TABLE PlatformInfo(
	 Id  INT NOT NULL IDENTITY,
	 Logline  VARCHAR(1500) NOT NULL,
)
GO
CREATE TABLE  Post  (
	 Id  INT NOT NULL IDENTITY,
	 Title  VARCHAR(255) NOT NULL,
	 Content  VARCHAR(255) NOT NULL,
	 UserId  INT NOT NULL,
	 Rating  INT NULL,
	 Views	 INT NULL,			
	PRIMARY KEY ( Id )
);
GO
CREATE TABLE  Image  (
	 Id  INT NOT NULL IDENTITY,
	 Path  VARCHAR(255) NOT NULL,
	PRIMARY KEY ( Id )
);
GO
CREATE TABLE  Role  (
	 Id  INT NOT NULL IDENTITY,
	 Name  VARCHAR(255) NOT NULL,
	PRIMARY KEY ( Id )
);
GO
CREATE TABLE  [User]  (
	 Id  INT NOT NULL IDENTITY,
	 Nickname  VARCHAR(255) NOT NULL UNIQUE,
	 Bio  VARCHAR(255) NOT NULL,
	 ImageId INT NOT NULL,
	 RoleId  INT NOT NULL,
     UserCredentialsId  INT NOT NULL UNIQUE,
     PRIMARY KEY ( Id )
);
GO
CREATE TABLE  PostImage  (
	 Id  INT NOT NULL IDENTITY,
	 PostId  INT NOT NULL,
	 ImageId  INT NOT NULL,
	 ImageNumber  INT NULL,
	PRIMARY KEY ( Id )
);
GO
CREATE TABLE  UserCredentials  (
	 Id  INT NOT NULL IDENTITY,
	 Login  VARCHAR(255) NOT NULL UNIQUE,
	 Password  VARCHAR(255) NOT NULL,
	
	PRIMARY KEY ( Id )
);
GO
CREATE TABLE  Tag  (
	 Id  INT NOT NULL IDENTITY,
	 Name  VARCHAR(255) NOT NULL UNIQUE,
	PRIMARY KEY ( Id )
);
GO
CREATE TABLE  PostTag  (
	 Id  INT NOT NULL IDENTITY,
	 PostId  INT NOT NULL,
	 TagId  INT NOT NULL,
	PRIMARY KEY ( Id )
);
GO
CREATE TABLE UserRatedPost (
	Id  INT NOT NULL IDENTITY,
	PostId  INT NOT NULL,
	UserId INT  NULL,
	Points INT NOT NULL,
	PRIMARY KEY ( Id )
);
CREATE TABLE Comments(
	 Id  INT NOT NULL IDENTITY,
	 Content  VARCHAR(1500) NOT NULL,
	 PostId INT NOT NULL,
	 UserId INT NOT NULL,
	 CommentId INT NULL,
	 PRIMARY KEY ( Id )
);
GO
CREATE TABLE UserSubToUser
(
	 Id  INT NOT NULL IDENTITY,
	 UserSubscriberId  INT NOT NULL,
	 UserCreatorId INT NOT NULL,
	 PRIMARY KEY ( Id )
);
GO
CREATE TABLE UserSubsToTag
(
	Id  INT NOT NULL IDENTITY,
	UserSubscriberId  INT NOT NULL,
	TagId INT NOT NULL,
	PRIMARY KEY ( Id )
);
GO

ALTER TABLE  Post  ADD CONSTRAINT  Post_fk_User  FOREIGN KEY ( UserId ) REFERENCES  [User] ( Id );
GO
ALTER TABLE  [User]  ADD CONSTRAINT  User_fk_Image  FOREIGN KEY ( ImageId ) REFERENCES  Image ( Id );
GO
ALTER TABLE  [User]  ADD CONSTRAINT  User_fk_Role  FOREIGN KEY ( RoleId ) REFERENCES  Role ( Id );
GO
ALTER TABLE  [User]  ADD CONSTRAINT  User_fk_UserCredentials  FOREIGN KEY ( UserCredentialsId ) REFERENCES  UserCredentials ( Id ) ON DELETE CASCADE;
GO
ALTER TABLE  PostImage  ADD CONSTRAINT  PostImage_fk0  FOREIGN KEY ( PostId ) REFERENCES  Post ( Id );
GO
ALTER TABLE  PostImage  ADD CONSTRAINT  PostImage_fk1  FOREIGN KEY ( ImageId ) REFERENCES  Image ( Id );
GO
ALTER TABLE  PostTag  ADD CONSTRAINT  PostTag_fk0  FOREIGN KEY ( PostId ) REFERENCES  Post ( Id );
GO
ALTER TABLE  PostTag  ADD CONSTRAINT  PostTag_fk1  FOREIGN KEY ( TagId ) REFERENCES  Tag ( Id );
GO
ALTER TABLE UserRatedPost ADD CONSTRAINT UserRatedPost_fkUser FOREIGN KEY (UserId) REFERENCES [User] (Id)
GO
ALTER TABLE UserRatedPost ADD CONSTRAINT UserRatedPost_fkPost FOREIGN KEY (PostId) REFERENCES Post (Id)
GO
ALTER TABLE Comments ADD CONSTRAINT Comments_fkPost FOREIGN KEY (PostId) REFERENCES Post (Id)
GO
ALTER TABLE Comments ADD CONSTRAINT Comments_fkUser FOREIGN KEY (UserId) REFERENCES [User] (Id)
GO
ALTER TABLE Comments ADD CONSTRAINT Comments_fkComments FOREIGN KEY (CommentId) REFERENCES Comments  (Id)
GO
ALTER TABLE UserSubToUser ADD CONSTRAINT UserSubToUser_fkSub_User FOREIGN KEY (UserSubscriberId) REFERENCES [User] (Id)
GO
ALTER TABLE UserSubToUser ADD CONSTRAINT UserSubToUser_fkCreator_User FOREIGN KEY (UserCreatorId) REFERENCES [User] (Id)
GO
ALTER TABLE UserSubsToTag ADD CONSTRAINT UserSubToTag_fk_User FOREIGN KEY (UserSubscriberId) REFERENCES [User] (Id)
GO
ALTER TABLE UserSubsToTag  ADD CONSTRAINT  UserSubsToTag_fk_Tag  FOREIGN KEY ( TagId ) REFERENCES  Tag ( Id );



use BLOg
 Insert into  Tag VALUES('test')
 GO
 select * from Tag
GO
 insert into Role Values('testRole')
 GO
 insert into UserCredentials Values('testLOgin','testPword')
GO
